INFO  03:33:34,473 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  03:33:34,565 - #2 program
INFO  03:33:34,566 - #47 test301
INFO  03:33:34,566 - #6 const
INFO  03:33:34,568 - #47 int
INFO  03:33:34,568 - #47 nula
INFO  03:33:34,569 - #29 =
INFO  03:33:34,569 - #45 0
INFO  03:33:34,569 - #34 ;
INFO  03:33:34,571 - #6 const
INFO  03:33:34,575 - #47 int
INFO  03:33:34,575 - #47 jedan
INFO  03:33:34,575 - #29 =
INFO  03:33:34,575 - #45 1
INFO  03:33:34,576 - #34 ;
INFO  03:33:34,576 - #6 const
INFO  03:33:34,576 - #47 int
INFO  03:33:34,576 - #47 pet
INFO  03:33:34,576 - #29 =
INFO  03:33:34,576 - #45 5
INFO  03:33:34,577 - #34 ;
INFO  03:33:34,577 - #47 int
INFO  03:33:34,578 - #47 niz
INFO  03:33:34,597 - #40 [
INFO  03:33:34,597 - #41 ]
INFO  03:33:34,597 - #34 ;
INFO  03:33:34,600 - #47 char
INFO  03:33:34,602 - #47 nizch
INFO  03:33:34,602 - #40 [
INFO  03:33:34,602 - #41 ]
INFO  03:33:34,602 - #34 ;
INFO  03:33:34,603 - #47 int
INFO  03:33:34,603 - #47 mat
INFO  03:33:34,603 - #40 [
INFO  03:33:34,603 - #41 ]
INFO  03:33:34,603 - #40 [
INFO  03:33:34,603 - #41 ]
INFO  03:33:34,603 - #34 ;
INFO  03:33:34,606 - #47 int
INFO  03:33:34,606 - #47 a
INFO  03:33:34,606 - #34 ;
INFO  03:33:34,607 - #42 {
INFO  03:33:34,607 - #12 void
INFO  03:33:34,608 - #47 main
INFO  03:33:34,610 - #38 (
INFO  03:33:34,611 - #39 )
INFO  03:33:34,613 - #47 int
INFO  03:33:34,615 - #47 bodovi
INFO  03:33:34,615 - #34 ;
INFO  03:33:34,615 - #47 bool
INFO  03:33:34,615 - #47 bt
INFO  03:33:34,616 - #34 ;
INFO  03:33:34,616 - #42 {
INFO  03:33:34,616 - #47 bodovi
INFO  03:33:34,618 - #29 =
INFO  03:33:34,619 - #45 2
INFO  03:33:34,621 - #31 +
INFO  03:33:34,624 - #45 1
INFO  03:33:34,626 - #34 ;
INFO  03:33:34,628 - #43 }
INFO  03:33:34,628 - #43 }
INFO  03:33:34,632 - Program(
  ProgName(
   test301
  ) [ProgName]
  ListDecl(
    ListDecl(
      ListDecl(
        ListDecl(
          ListDecl(
            ListDecl(
              ListDecl(
                EmptyDecList(
                ) [EmptyDecList]
                DeclConst(
                  ConstDecl(
                    Type(
                     int
                    ) [Type]
                    SingleConstDecl(
                      ConstDeclSingle(
                       nula
                        Num(
                         0
                        ) [Num]
                      ) [ConstDeclSingle]
                    ) [SingleConstDecl]
                  ) [ConstDecl]
                ) [DeclConst]
              ) [ListDecl]
              DeclConst(
                ConstDecl(
                  Type(
                   int
                  ) [Type]
                  SingleConstDecl(
                    ConstDeclSingle(
                     jedan
                      Num(
                       1
                      ) [Num]
                    ) [ConstDeclSingle]
                  ) [SingleConstDecl]
                ) [ConstDecl]
              ) [DeclConst]
            ) [ListDecl]
            DeclConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                SingleConstDecl(
                  ConstDeclSingle(
                   pet
                    Num(
                     5
                    ) [Num]
                  ) [ConstDeclSingle]
                ) [SingleConstDecl]
              ) [ConstDecl]
            ) [DeclConst]
          ) [ListDecl]
          DeclVar(
            VarDecl(
              Type(
               int
              ) [Type]
              SingleVarDeclR(
                VarDeclRSingle(
                 niz
                  BracketVarDeclR(
                  ) [BracketVarDeclR]
                ) [VarDeclRSingle]
              ) [SingleVarDeclR]
            ) [VarDecl]
          ) [DeclVar]
        ) [ListDecl]
        DeclVar(
          VarDecl(
            Type(
             char
            ) [Type]
            SingleVarDeclR(
              VarDeclRSingle(
               nizch
                BracketVarDeclR(
                ) [BracketVarDeclR]
              ) [VarDeclRSingle]
            ) [SingleVarDeclR]
          ) [VarDecl]
        ) [DeclVar]
      ) [ListDecl]
      DeclVar(
        VarDecl(
          Type(
           int
          ) [Type]
          SingleVarDeclR(
            VarDeclRSingle(
             mat
              DoubleBracketVarDeclR(
              ) [DoubleBracketVarDeclR]
            ) [VarDeclRSingle]
          ) [SingleVarDeclR]
        ) [VarDecl]
      ) [DeclVar]
    ) [ListDecl]
    DeclVar(
      VarDecl(
        Type(
         int
        ) [Type]
        SingleVarDeclR(
          VarDeclRSingle(
           a
            NoBracketVarDeclR(
            ) [NoBracketVarDeclR]
          ) [VarDeclRSingle]
        ) [SingleVarDeclR]
      ) [VarDecl]
    ) [DeclVar]
  ) [ListDecl]
  ListMethodDecl(
    EmptyMethodDeclList(
    ) [EmptyMethodDeclList]
    FormParsMethodDecl(
      BeforeVoid(
      ) [BeforeVoid]
      MethodDeclName(
       main
      ) [MethodDeclName]
      NoFormPars(
      ) [NoFormPars]
      ListVarDecl(
        ListVarDecl(
          EmptyVarDeclList(
          ) [EmptyVarDeclList]
          VarDecl(
            Type(
             int
            ) [Type]
            SingleVarDeclR(
              VarDeclRSingle(
               bodovi
                NoBracketVarDeclR(
                ) [NoBracketVarDeclR]
              ) [VarDeclRSingle]
            ) [SingleVarDeclR]
          ) [VarDecl]
        ) [ListVarDecl]
        VarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDeclR(
            VarDeclRSingle(
             bt
              NoBracketVarDeclR(
              ) [NoBracketVarDeclR]
            ) [VarDeclRSingle]
          ) [SingleVarDeclR]
        ) [VarDecl]
      ) [ListVarDecl]
      ListStatement(
        EmptyStatementList(
        ) [EmptyStatementList]
        DesignatorStmt(
          DesignatorStatementAssign(
            Designator(
             bodovi
              EmptyDesignatorList(
              ) [EmptyDesignatorList]
            ) [Designator]
            Assignop(
            ) [Assignop]
            ExprTerm(
              Term(
                NumFactor(
                 2
                ) [NumFactor]
                EmptyTermList(
                ) [EmptyTermList]
              ) [Term]
              ListExpr(
                EmptyExprList(
                ) [EmptyExprList]
                ExprR(
                  AddopPlus(
                  ) [AddopPlus]
                  Term(
                    NumFactor(
                     1
                    ) [NumFactor]
                    EmptyTermList(
                    ) [EmptyTermList]
                  ) [Term]
                ) [ExprR]
              ) [ListExpr]
            ) [ExprTerm]
          ) [DesignatorStatementAssign]
        ) [DesignatorStmt]
      ) [ListStatement]
    ) [FormParsMethodDecl]
  ) [ListMethodDecl]
) [Program]
INFO  03:33:34,632 - ===================================
